{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","message","nodeName","id","printMessage","messagePlace","document","body","lastElementChild","previousElementSibling","messageHtml","insertAdjacentHTML","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAoBH,GAAAA,OAAAA,GAAa,WACjCI,IAAAA,EAAoBJ,UAAAA,OAAAA,EACRD,4BAAAA,OAAAA,EAAQM,SACpBN,iBAAAA,OAAAA,EAAQO,GAFd,KAIAJ,EAAQE,OAKd,IAAMG,EAAe,SAACH,GACdI,IAAAA,EAAeC,SAASC,KAAKC,iBAAiBC,uBAE9CC,EAEAT,sCAAAA,OAAAA,EAFN,qBAMAI,EAAaM,mBAAmB,cAAeD,IAGjDE,OAAOC,QAAU,CACflB,QAAAA,EACAS,aAAAA","file":"main.267c89af.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(`${eventName}`, () => {\n      const message = `It was ${eventName}\n      on the element: ${element.nodeName},\n      id: ${element.id}.`;\n\n      resolve(message);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const messagePlace = document.body.lastElementChild.previousElementSibling;\n\n  const messageHtml = `\n    <div class=\"message\">\n      ${message};\n    </div>\n  `;\n\n  messagePlace.insertAdjacentHTML('beforebegin', messageHtml);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}